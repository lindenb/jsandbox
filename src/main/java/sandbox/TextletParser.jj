
options {
STATIC=false;
DEBUG_PARSER=false;
DEBUG_TOKEN_MANAGER=false;
}


PARSER_BEGIN(Textlet)


package sandbox;
/**
 * Author Pierre Lindenbaum
 */
import java.io.ByteArrayOutputStream;
import java.io.FileInputStream;
import java.io.InputStream;
import java.io.Reader;
import java.util.zip.GZIPInputStream;
import java.io.*;
import java.math.BigDecimal;
import java.net.URL;
import java.util.Iterator;
import java.util.List;
import java.util.LinkedHashMap;
import java.util.ArrayList;
import java.util.Map;
import java.util.Set;
import java.util.regex.Pattern;

import org.w3c.dom.*;
import javax.xml.parsers.*;
import javax.xml.transform.*;
import javax.xml.transform.dom.*;
import javax.xml.transform.stream.*;


/**
 *
 * Textlet
 *
 */
@SuppressWarnings("unchecked")
public class Textlet
	{
	private StringBuilder outBody = new StringBuilder();
	public static void main(String args[])
		{
		try
		        {
				int optind=0;
				while(optind< args.length)
					{
					if(args[optind].equals("-h") ||
					   args[optind].equals("-help") ||
					   args[optind].equals("--help"))
						{
						System.err.println("Pierre Lindenbaum PhD 2015. http://plindenbaum.blogspot.com");
						System.err.println("Options:");
						System.err.println(" -h help; This screen.");
						return;
						}
					else if(args[optind].startsWith("-L"))
						{
						//todo
						}
					else if(args[optind].equals("--"))
						{
						optind++;
						break;
						}
					else if(args[optind].startsWith("-"))
						{
						System.err.println("Unknown option "+args[optind]);
						return;
						}
					else 
						{
						break;
						}
					++optind;
					}
		        
		        new Textlet(System.in).input();
		        }
		catch(Exception err)
		        {
		        err.printStackTrace();
		        }
		}
	
	
	}
PARSER_END(Textlet)

SKIP: {
	  "<%@"  : ST2 
	| "<%--" : ST3
	| "<%=" { System.out.print("\");\nout.print( this.toString( ");} : ST4
	| "<%!"  : ST5
	| "<%"  { System.out.print("\"); ");} : ST1
	
}  
TOKEN :
    {
    <ANY : (~[] ) >
    }
 
  
<ST1>SKIP: {
	"%>"  : DEFAULT
}  

<ST1>TOKEN :
    {
    <ST1_ANY : (~[] ) > 
    }  


<ST2>SKIP: {
	"\n"|"\t"|" "|
	"%>"  : DEFAULT
}  

<ST2>TOKEN :
    {
      <ST2_FILE : "file">
    | <ST2_PAGE : "page">
    | <ST2_INCLUDE : "include">
    | <ST2_IMPORT : "import">
    | <ST2_EQ : "=">
    | <ST2_STR : ( "\'" (~["\'"])*"\'" |  "\"" (~["\""])*"\"" ) >
    }  



<ST3>SKIP: {
	"\n"|"\t"|" "|
	"--%>"  : DEFAULT
}  

<ST3>TOKEN :
    {
   	<ST3_ANY : (~[] ) > 
    }  


<ST4>SKIP: {
	"%>"  {System.out.print(" ));\nout.print(\""); } : DEFAULT
}  

<ST4>TOKEN :
    {
    <ST4_ANY : (~[] ) > 
    }  

<ST5>TOKEN :
    {
    <ST5_ANY : (~[] ) > 
    }  


<ST5>SKIP: {
	"%>"  : DEFAULT
}  



private void input(): {}
	{
	{
	System.out.print("@Generated public class ClassName { \n");
	System.out.print("public void write(final PrintWriter out) {\nout.print(\"");
	} ( any() )* <EOF> 
	{
	System.out.println("\");\n}");
	System.out.println("protected String toString(final Object o) { return o==null?\"\":String.valueOf(o); }");
	System.out.println(this.outBody);
	System.out.println("\n}");
	}
	}
private void any(): {Token t;}
	{
	(
	t=<ANY> {
		for(int i=0;i< t.image.length();++i)
			{
			final char c = t.image.charAt(i);
			switch(c)
				{
				case '\'': System.out.print("\\\'"); break;
				case '\"': System.out.print("\\\""); break;
				case '\\': System.out.print("\\\\"); break;
				case '\n': System.out.print("\\n"); break;
				case '\t': System.out.print("\\t"); break;
				default:  System.out.print(c); break;
				}
			}
		} |	
	t=<ST1_ANY> { System.out.print(t.image);} |
	t=<ST4_ANY> { System.out.print(t.image);} |
	t=<ST5_ANY> { this.outBody.append(t.image);} |
	include() {   }
	)
	}

private void include():{ Token t;}
	{
	<ST2_INCLUDE> <ST2_FILE>   <ST2_EQ>    t=<ST2_STR>   { }
	}


